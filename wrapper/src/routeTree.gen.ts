/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const ListLazyImport = createFileRoute('/list')()
const EditorLazyImport = createFileRoute('/editor')()
const AuthLazyImport = createFileRoute('/auth')()
const IndexLazyImport = createFileRoute('/')()
const EditorIdLazyImport = createFileRoute('/editor/$id')()

// Create/Update Routes

const ListLazyRoute = ListLazyImport.update({
  path: '/list',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/list.lazy').then((d) => d.Route))

const EditorLazyRoute = EditorLazyImport.update({
  path: '/editor',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/editor.lazy').then((d) => d.Route))

const AuthLazyRoute = AuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const EditorIdLazyRoute = EditorIdLazyImport.update({
  path: '/$id',
  getParentRoute: () => EditorLazyRoute,
} as any).lazy(() => import('./routes/editor.$id.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthLazyImport
      parentRoute: typeof rootRoute
    }
    '/editor': {
      id: '/editor'
      path: '/editor'
      fullPath: '/editor'
      preLoaderRoute: typeof EditorLazyImport
      parentRoute: typeof rootRoute
    }
    '/list': {
      id: '/list'
      path: '/list'
      fullPath: '/list'
      preLoaderRoute: typeof ListLazyImport
      parentRoute: typeof rootRoute
    }
    '/editor/$id': {
      id: '/editor/$id'
      path: '/$id'
      fullPath: '/editor/$id'
      preLoaderRoute: typeof EditorIdLazyImport
      parentRoute: typeof EditorLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AuthLazyRoute,
  EditorLazyRoute: EditorLazyRoute.addChildren({ EditorIdLazyRoute }),
  ListLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth",
        "/editor",
        "/list"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth": {
      "filePath": "auth.lazy.tsx"
    },
    "/editor": {
      "filePath": "editor.lazy.tsx",
      "children": [
        "/editor/$id"
      ]
    },
    "/list": {
      "filePath": "list.lazy.tsx"
    },
    "/editor/$id": {
      "filePath": "editor.$id.lazy.tsx",
      "parent": "/editor"
    }
  }
}
ROUTE_MANIFEST_END */
